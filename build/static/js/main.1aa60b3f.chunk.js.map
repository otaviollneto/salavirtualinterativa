{"version":3,"sources":["Video.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["connections","peerConnectionConfig","iceServers","urls","socket","socketId","elms","Video","props","getPermissions","a","navigator","mediaDevices","getUserMedia","video","then","videoAvailable","catch","audio","audioAvailable","getDisplayMedia","setState","screenAvailable","stream","window","localStream","localVideoref","current","srcObject","e","console","log","getMedia","connectToSocketServer","state","getUserMediaSuccess","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","sdp","localDescription","onended","MediaStream","black","silence","blackSilence","getDislayMedia","screen","getDislayMediaSuccess","gotMessageFromServer","fromId","message","signal","parse","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","changeCssVideos","main","minWidth","offsetWidth","height","String","width","videos","querySelectorAll","length","style","minHeight","setProperty","io","connect","secure","on","location","href","addMessage","document","querySelector","parentNode","removeChild","getElementById","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVidep","cssMesure","createElement","css","maxHeight","margin","borderStyle","borderColor","objectFit","i","setAttribute","autoplay","playsinline","appendChild","undefined","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","canvas","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","openChat","showModal","newmessages","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevState","messages","handleUsername","username","sendMessage","copyUrl","text","clipboard","writeText","success","error","textArea","body","focus","select","execCommand","err","askForUsername","isChrome","userAgent","toLowerCase","vendor","test","match","React","createRef","faker","internet","userName","this","background","padding","textAlign","marginTop","justifyContent","fontWeight","paddingRight","Input","placeholder","onChange","Button","variant","color","onClick","paddingTop","ref","autoPlay","muted","className","backgroundColor","IconButton","Badge","badgeContent","max","Modal","show","onHide","zIndex","Header","closeButton","Title","Body","overflow","overflowY","map","item","index","key","wordBreak","Footer","disable","marginLeft","fontSize","Row","Component","Home","handleChange","url","join","split","Math","random","toString","substring","App","path","exact","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aa60b3f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport faker from \"faker\";\n\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport { message } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Video.css\";\n\nconst server_url =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://video.sebastienbiollo.com\"\n    : \"http://localhost:4001\";\n\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [\n    // { 'urls': 'stun:stun.services.mozilla.com' },\n    { urls: \"stun:stun.l.google.com:19302\" },\n  ],\n};\nvar socket = null;\nvar socketId = null;\nvar elms = 0;\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideoref = React.createRef();\n\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: true,\n      username: faker.internet.userName(),\n    };\n    connections = {};\n\n    this.getPermissions();\n  }\n\n  getPermissions = async () => {\n    try {\n      await navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(() => (this.videoAvailable = true))\n        .catch(() => (this.videoAvailable = false));\n\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() => (this.audioAvailable = true))\n        .catch(() => (this.audioAvailable = false));\n\n      if (navigator.mediaDevices.getDisplayMedia) {\n        this.setState({ screenAvailable: true });\n      } else {\n        this.setState({ screenAvailable: false });\n      }\n\n      if (this.videoAvailable || this.audioAvailable) {\n        navigator.mediaDevices\n          .getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable,\n          })\n          .then((stream) => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          })\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  getMedia = () => {\n    this.setState(\n      {\n        video: this.videoAvailable,\n        audio: this.audioAvailable,\n      },\n      () => {\n        this.getUserMedia();\n        this.connectToSocketServer();\n      }\n    );\n  };\n\n  getUserMedia = () => {\n    if (\n      (this.state.video && this.videoAvailable) ||\n      (this.state.audio && this.audioAvailable)\n    ) {\n      navigator.mediaDevices\n        .getUserMedia({ video: this.state.video, audio: this.state.audio })\n        .then(this.getUserMediaSuccess)\n        .then((stream) => {})\n        .catch((e) => console.log(e));\n    } else {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      } catch (e) {}\n    }\n  };\n\n  getUserMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              video: false,\n              audio: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              for (let id in connections) {\n                connections[id].addStream(window.localStream);\n\n                connections[id].createOffer().then((description) => {\n                  connections[id]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        id,\n                        JSON.stringify({\n                          sdp: connections[id].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                });\n              }\n            }\n          );\n        })\n    );\n  };\n\n  getDislayMedia = () => {\n    if (this.state.screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true, audio: true })\n          .then(this.getDislayMediaSuccess)\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  getDislayMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              screen: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              this.getUserMedia();\n            }\n          );\n        })\n    );\n  };\n\n  gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n\n    if (fromId !== socketId) {\n      if (signal.sdp) {\n        connections[fromId]\n          .setRemoteDescription(new RTCSessionDescription(signal.sdp))\n          .then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId]\n                .createAnswer()\n                .then((description) => {\n                  connections[fromId]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        fromId,\n                        JSON.stringify({\n                          sdp: connections[fromId].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                })\n                .catch((e) => console.log(e));\n            }\n          })\n          .catch((e) => console.log(e));\n      }\n\n      if (signal.ice) {\n        connections[fromId]\n          .addIceCandidate(new RTCIceCandidate(signal.ice))\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  changeCssVideos = (main) => {\n    let widthMain = main.offsetWidth;\n    let minWidth = \"30%\";\n    if ((widthMain * 30) / 100 < 300) {\n      minWidth = \"300px\";\n    }\n    let minHeight = \"40%\";\n\n    let height = String(100 / elms) + \"%\";\n    let width = \"\";\n    if (elms === 0 || elms === 1) {\n      width = \"100%\";\n      height = \"100%\";\n    } else if (elms === 2) {\n      width = \"45%\";\n      height = \"100%\";\n    } else if (elms === 3 || elms === 4) {\n      width = \"35%\";\n      height = \"50%\";\n    } else {\n      width = String(100 / elms) + \"%\";\n    }\n\n    let videos = main.querySelectorAll(\"video\");\n    for (let a = 0; a < videos.length; ++a) {\n      videos[a].style.minWidth = minWidth;\n      videos[a].style.minHeight = minHeight;\n      videos[a].style.setProperty(\"width\", width);\n      videos[a].style.setProperty(\"height\", height);\n    }\n\n    return { minWidth, minHeight, width, height };\n  };\n\n  connectToSocketServer = () => {\n    socket = io.connect(server_url, { secure: true });\n\n    socket.on(\"signal\", this.gotMessageFromServer);\n\n    socket.on(\"connect\", () => {\n      socket.emit(\"join-call\", window.location.href);\n      socketId = socket.id;\n\n      socket.on(\"chat-message\", this.addMessage);\n\n      socket.on(\"user-left\", (id) => {\n        let video = document.querySelector(`[data-socket=\"${id}\"]`);\n        if (video !== null) {\n          elms--;\n          video.parentNode.removeChild(video);\n\n          let main = document.getElementById(\"main\");\n          this.changeCssVideos(main);\n        }\n      });\n\n      socket.on(\"user-joined\", (id, clients) => {\n        clients.forEach((socketListId) => {\n          connections[socketListId] = new RTCPeerConnection(\n            peerConnectionConfig\n          );\n          // Wait for their ice candidate\n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socket.emit(\n                \"signal\",\n                socketListId,\n                JSON.stringify({ ice: event.candidate })\n              );\n            }\n          };\n\n          // Wait for their video stream\n          connections[socketListId].onaddstream = (event) => {\n            // TODO mute button, full screen button\n            var searchVidep = document.querySelector(\n              `[data-socket=\"${socketListId}\"]`\n            );\n            if (searchVidep !== null) {\n              // if i don't do this check it make an empyt square\n              searchVidep.srcObject = event.stream;\n            } else {\n              elms = clients.length;\n              let main = document.getElementById(\"main\");\n              let cssMesure = this.changeCssVideos(main);\n\n              let video = document.createElement(\"video\");\n\n              let css = {\n                minWidth: cssMesure.minWidth,\n                minHeight: cssMesure.minHeight,\n                maxHeight: \"100%\",\n                margin: \"10px\",\n                borderStyle: \"solid\",\n                borderColor: \"#bdbdbd\",\n                objectFit: \"fill\",\n              };\n              for (let i in css) video.style[i] = css[i];\n\n              video.style.setProperty(\"width\", cssMesure.width);\n              video.style.setProperty(\"height\", cssMesure.height);\n              video.setAttribute(\"data-socket\", socketListId);\n              video.srcObject = event.stream;\n              video.autoplay = true;\n              video.playsinline = true;\n\n              main.appendChild(video);\n            }\n          };\n\n          // Add the local video stream\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) =>\n              new MediaStream([this.black(...args), this.silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n\n        if (id === socketId) {\n          for (let id2 in connections) {\n            if (id2 === socketId) continue;\n\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n\n            connections[id2].createOffer().then((description) => {\n              connections[id2]\n                .setLocalDescription(description)\n                .then(() => {\n                  socket.emit(\n                    \"signal\",\n                    id2,\n                    JSON.stringify({ sdp: connections[id2].localDescription })\n                  );\n                })\n                .catch((e) => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n\n  silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false });\n  };\n  black = ({ width = 640, height = 480 } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height,\n    });\n    canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false });\n  };\n\n  handleVideo = () =>\n    this.setState({ video: !this.state.video }, () => this.getUserMedia());\n  handleAudio = () =>\n    this.setState({ audio: !this.state.audio }, () => this.getUserMedia());\n  handleScreen = () =>\n    this.setState({ screen: !this.state.screen }, () => this.getDislayMedia());\n\n  handleEndCall = () => {\n    try {\n      let tracks = this.localVideoref.current.srcObject.getTracks();\n      tracks.forEach((track) => track.stop());\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n\n  openChat = () => this.setState({ showModal: true, newmessages: 0 });\n  closeChat = () => this.setState({ showModal: false });\n  handleMessage = (e) => this.setState({ message: e.target.value });\n\n  addMessage = (data, sender, socketIdSender) => {\n    this.setState((prevState) => ({\n      messages: [...prevState.messages, { sender: sender, data: data }],\n    }));\n    if (socketIdSender !== socketId) {\n      this.setState({ newmessages: this.state.newmessages + 1 });\n    }\n  };\n\n  handleUsername = (e) => this.setState({ username: e.target.value });\n\n  sendMessage = () => {\n    socket.emit(\"chat-message\", this.state.message, this.state.username);\n    this.setState({ message: \"\", sender: this.state.username });\n  };\n\n  copyUrl = () => {\n    let text = window.location.href;\n    if (!navigator.clipboard) {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand(\"copy\");\n        message.success(\"Link copied to clipboard!\");\n      } catch (err) {\n        message.error(\"Failed to copy\");\n      }\n      document.body.removeChild(textArea);\n      return;\n    }\n    navigator.clipboard.writeText(text).then(\n      function () {\n        message.success(\"Link copied to clipboard!\");\n      },\n      () => {\n        message.error(\"Failed to copy\");\n      }\n    );\n  };\n\n  connect = () =>\n    this.setState({ askForUsername: false }, () => this.getMedia());\n\n  isChrome = function () {\n    let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n    let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n    let matchChrome = /google inc/.test(vendor)\n      ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/)\n      : null;\n    // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n    // return matchChrome !== null || matchFirefox !== null\n    return matchChrome !== null;\n  };\n\n  render() {\n    {\n      /*if(this.isChrome() === false){\n\t\t\treturn (\n\t\t\t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\n\t\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\n\t\t\t\t\t<h1>Sorry, this works only with Google Chrome</h1>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}*/\n    }\n    return (\n      <div>\n        {this.state.askForUsername === true ? (\n          <div>\n            <div\n              style={{\n                background: \"white\",\n                width: \"30%\",\n                height: \"auto\",\n                padding: \"20px\",\n                minWidth: \"400px\",\n                textAlign: \"center\",\n                margin: \"auto\",\n                marginTop: \"50px\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p\n                style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}\n              >\n                Qual a sua graça (nome)\n              </p>\n              <Input\n                placeholder=\"Username\"\n                value={this.state.username}\n                onChange={(e) => this.handleUsername(e)}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.connect}\n                style={{ margin: \"20px\" }}\n              >\n                Conectar\n              </Button>\n            </div>\n\n            <div\n              style={{\n                justifyContent: \"center\",\n                textAlign: \"center\",\n                paddingTop: \"40px\",\n              }}\n            >\n              <video\n                id=\"my-video\"\n                ref={this.localVideoref}\n                autoPlay\n                muted\n                style={{\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\",\n                  width: \"60%\",\n                  height: \"30%\",\n                }}\n              ></video>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div\n              className=\"btn-down\"\n              style={{\n                backgroundColor: \"whitesmoke\",\n                color: \"whitesmoke\",\n                textAlign: \"center\",\n              }}\n            >\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleVideo}\n              >\n                {this.state.video === true ? (\n                  <VideocamIcon />\n                ) : (\n                  <VideocamOffIcon />\n                )}\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#f44336\" }}\n                onClick={this.handleEndCall}\n              >\n                <CallEndIcon />\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleAudio}\n              >\n                {this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\n              </IconButton>\n\n              {this.state.screenAvailable === true ? (\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.handleScreen}\n                >\n                  {this.state.screen === true ? (\n                    <ScreenShareIcon />\n                  ) : (\n                    <StopScreenShareIcon />\n                  )}\n                </IconButton>\n              ) : null}\n\n              <Badge\n                badgeContent={this.state.newmessages}\n                max={999}\n                color=\"secondary\"\n                onClick={this.openChat}\n              >\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.openChat}\n                >\n                  <ChatIcon />\n                </IconButton>\n              </Badge>\n            </div>\n\n            <Modal\n              show={this.state.showModal}\n              onHide={this.closeChat}\n              style={{ zIndex: \"999999\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Mensagens</Modal.Title>\n              </Modal.Header>\n              <Modal.Body\n                style={{\n                  overflow: \"auto\",\n                  overflowY: \"auto\",\n                  height: \"400px\",\n                  textAlign: \"left\",\n                }}\n              >\n                {this.state.messages.length > 0 ? (\n                  this.state.messages.map((item, index) => (\n                    <div key={index} style={{ textAlign: \"left\" }}>\n                      <p style={{ wordBreak: \"break-all\" }}>\n                        <b>{item.sender}</b>: {item.data}\n                      </p>\n                    </div>\n                  ))\n                ) : (\n                  <p>Nenhuma mensagem</p>\n                )}\n              </Modal.Body>\n              <Modal.Footer className=\"div-send-msg\">\n                <Input\n                  placeholder=\"Digite algo\"\n                  value={this.state.message}\n                  onChange={(e) => this.handleMessage(e)}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.sendMessage}\n                >\n                  Enviar\n                </Button>\n              </Modal.Footer>\n            </Modal>\n\n            <div className=\"container\">\n              <div style={{ paddingTop: \"20px\" }}>\n                <Input value={window.location.href} disable=\"true\"></Input>\n                <Button\n                  style={{\n                    backgroundColor: \"#3f51b5\",\n                    color: \"whitesmoke\",\n                    marginLeft: \"20px\",\n                    marginTop: \"10px\",\n                    width: \"120px\",\n                    fontSize: \"10px\",\n                  }}\n                  onClick={this.copyUrl}\n                >\n                  Copiar link para convidar\n                </Button>\n              </div>\n\n              <Row\n                id=\"main\"\n                className=\"flex-container\"\n                style={{ margin: 0, padding: 0 }}\n              >\n                <video\n                  id=\"my-video\"\n                  ref={this.localVideoref}\n                  autoPlay\n                  muted\n                  style={{\n                    borderStyle: \"solid\",\n                    borderColor: \"#bdbdbd\",\n                    margin: \"10px\",\n                    objectFit: \"fill\",\n                    width: \"100%\",\n                    height: \"100%\",\n                  }}\n                ></video>\n              </Row>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component } from \"react\";\nimport { Input, Button, IconButton } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: (Math.random() + 1).toString(36).substring(7),\n    };\n  }\n\n  handleChange = (e) => this.setState({ url: e.target.value });\n\n  join = () => {\n    if (this.state.url !== \"\") {\n      var url = this.state.url.split(\"/\");\n      window.location.href = `/${url[url.length - 1]}`;\n    } else {\n      var url = Math.random().toString(36).substring(2, 7);\n      window.location.href = `/${url}`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container2\">\n        <div>\n          <h1 style={{ fontSize: \"45px\" }}>Video Chamada</h1>\n          <p style={{ fontWeight: \"200\" }}>\n            Que tal bater um papo com alguém de forma diferente!\n          </p>\n        </div>\n\n        <div\n          style={{\n            background: \"white\",\n            width: \"30%\",\n            height: \"auto\",\n            padding: \"20px\",\n            minWidth: \"400px\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"100px\",\n          }}\n        >\n          <p style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}>\n            Código da Sala\n          </p>\n          <Input\n            value={this.state.url}\n            placeholder=\"Código\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.join}\n            style={{ margin: \"20px\" }}\n          >\n            Entrar\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport Video from './Video'\nimport Home from './Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/:url\" component={Video} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}