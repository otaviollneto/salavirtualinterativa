{"ast":null,"code":"var _jsxFileName = \"/Volumes/BIG HD/github/Video-Meeting/src/Video.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport faker from \"faker\";\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Video.css\";\nconst server_url = process.env.NODE_ENV === \"production\" ? \"https://video.sebastienbiollo.com\" : \"http://localhost:4001\";\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [// { 'urls': 'stun:stun.services.mozilla.com' },\n  {\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nvar socket = null;\nvar socketId = null;\nvar elms = 0;\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPermissions = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          video: true\n        }).then(() => this.videoAvailable = true).catch(() => this.videoAvailable = false);\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(() => this.audioAvailable = true).catch(() => this.audioAvailable = false);\n\n        if (navigator.mediaDevices.getDisplayMedia) {\n          this.setState({\n            screenAvailable: true\n          });\n        } else {\n          this.setState({\n            screenAvailable: false\n          });\n        }\n\n        if (this.videoAvailable || this.audioAvailable) {\n          navigator.mediaDevices.getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable\n          }).then(stream => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          }).then(stream => {}).catch(e => console.log(e));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMedia = () => {\n      this.setState({\n        video: this.videoAvailable,\n        audio: this.audioAvailable\n      }, () => {\n        this.getUserMedia();\n        this.connectToSocketServer();\n      });\n    };\n\n    this.getUserMedia = () => {\n      if (this.state.video && this.videoAvailable || this.state.audio && this.audioAvailable) {\n        navigator.mediaDevices.getUserMedia({\n          video: this.state.video,\n          audio: this.state.audio\n        }).then(this.getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      } else {\n        try {\n          let tracks = this.localVideoref.current.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        } catch (e) {}\n      }\n    };\n\n    this.getUserMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          video: false,\n          audio: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n\n          for (let id in connections) {\n            connections[id].addStream(window.localStream);\n            connections[id].createOffer().then(description => {\n              connections[id].setLocalDescription(description).then(() => {\n                socket.emit(\"signal\", id, JSON.stringify({\n                  sdp: connections[id].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        });\n      });\n    };\n\n    this.getDislayMedia = () => {\n      if (this.state.screen) {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getDisplayMedia({\n            video: true,\n            audio: true\n          }).then(this.getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.getDislayMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          screen: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n          this.getUserMedia();\n        });\n      });\n    };\n\n    this.gotMessageFromServer = (fromId, message) => {\n      var signal = JSON.parse(message);\n\n      if (fromId !== socketId) {\n        if (signal.sdp) {\n          connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId].createAnswer().then(description => {\n                connections[fromId].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", fromId, JSON.stringify({\n                    sdp: connections[fromId].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              }).catch(e => console.log(e));\n            }\n          }).catch(e => console.log(e));\n        }\n\n        if (signal.ice) {\n          connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.changeCssVideos = main => {\n      let widthMain = main.offsetWidth;\n      let minWidth = \"30%\";\n\n      if (widthMain * 30 / 100 < 300) {\n        minWidth = \"300px\";\n      }\n\n      let minHeight = \"40%\";\n      let height = String(100 / elms) + \"%\";\n      let width = \"\";\n\n      if (elms === 0 || elms === 1) {\n        width = \"100%\";\n        height = \"100%\";\n      } else if (elms === 2) {\n        width = \"45%\";\n        height = \"100%\";\n      } else if (elms === 3 || elms === 4) {\n        width = \"35%\";\n        height = \"50%\";\n      } else {\n        width = String(100 / elms) + \"%\";\n      }\n\n      let videos = main.querySelectorAll(\"video\");\n\n      for (let a = 0; a < videos.length; ++a) {\n        videos[a].style.minWidth = minWidth;\n        videos[a].style.minHeight = minHeight;\n        videos[a].style.setProperty(\"width\", width);\n        videos[a].style.setProperty(\"height\", height);\n      }\n\n      return {\n        minWidth,\n        minHeight,\n        width,\n        height\n      };\n    };\n\n    this.connectToSocketServer = () => {\n      socket = io.connect(server_url, {\n        secure: true\n      });\n      socket.on(\"signal\", this.gotMessageFromServer);\n      socket.on(\"connect\", () => {\n        socket.emit(\"join-call\", window.location.href);\n        socketId = socket.id;\n        socket.on(\"chat-message\", this.addMessage);\n        socket.on(\"user-left\", id => {\n          let video = document.querySelector(`[data-socket=\"${id}\"]`);\n\n          if (video !== null) {\n            elms--;\n            video.parentNode.removeChild(video);\n            let main = document.getElementById(\"main\");\n            this.changeCssVideos(main);\n          }\n        });\n        socket.on(\"user-joined\", (id, clients) => {\n          clients.forEach(socketListId => {\n            connections[socketListId] = new RTCPeerConnection(peerConnectionConfig); // Wait for their ice candidate\n\n            connections[socketListId].onicecandidate = function (event) {\n              if (event.candidate != null) {\n                socket.emit(\"signal\", socketListId, JSON.stringify({\n                  ice: event.candidate\n                }));\n              }\n            }; // Wait for their video stream\n\n\n            connections[socketListId].onaddstream = event => {\n              // TODO mute button, full screen button\n              var searchVidep = document.querySelector(`[data-socket=\"${socketListId}\"]`);\n\n              if (searchVidep !== null) {\n                // if i don't do this check it make an empyt square\n                searchVidep.srcObject = event.stream;\n              } else {\n                elms = clients.length;\n                let main = document.getElementById(\"main\");\n                let cssMesure = this.changeCssVideos(main);\n                let video = document.createElement(\"video\");\n                let css = {\n                  minWidth: cssMesure.minWidth,\n                  minHeight: cssMesure.minHeight,\n                  maxHeight: \"100%\",\n                  margin: \"10px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\"\n                };\n\n                for (let i in css) video.style[i] = css[i];\n\n                video.style.setProperty(\"width\", cssMesure.width);\n                video.style.setProperty(\"height\", cssMesure.height);\n                video.setAttribute(\"data-socket\", socketListId);\n                video.srcObject = event.stream;\n                video.autoplay = true;\n                video.playsinline = true;\n                main.appendChild(video);\n              }\n            }; // Add the local video stream\n\n\n            if (window.localStream !== undefined && window.localStream !== null) {\n              connections[socketListId].addStream(window.localStream);\n            } else {\n              let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n              window.localStream = blackSilence();\n              connections[socketListId].addStream(window.localStream);\n            }\n          });\n\n          if (id === socketId) {\n            for (let id2 in connections) {\n              if (id2 === socketId) continue;\n\n              try {\n                connections[id2].addStream(window.localStream);\n              } catch (e) {}\n\n              connections[id2].createOffer().then(description => {\n                connections[id2].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", id2, JSON.stringify({\n                    sdp: connections[id2].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              });\n            }\n          }\n        });\n      });\n    };\n\n    this.silence = () => {\n      let ctx = new AudioContext();\n      let oscillator = ctx.createOscillator();\n      let dst = oscillator.connect(ctx.createMediaStreamDestination());\n      oscillator.start();\n      ctx.resume();\n      return Object.assign(dst.stream.getAudioTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.black = ({\n      width = 640,\n      height = 480\n    } = {}) => {\n      let canvas = Object.assign(document.createElement(\"canvas\"), {\n        width,\n        height\n      });\n      canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n      let stream = canvas.captureStream();\n      return Object.assign(stream.getVideoTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.handleVideo = () => this.setState({\n      video: !this.state.video\n    }, () => this.getUserMedia());\n\n    this.handleAudio = () => this.setState({\n      audio: !this.state.audio\n    }, () => this.getUserMedia());\n\n    this.handleScreen = () => this.setState({\n      screen: !this.state.screen\n    }, () => this.getDislayMedia());\n\n    this.handleEndCall = () => {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {}\n\n      window.location.href = \"/\";\n    };\n\n    this.openChat = () => this.setState({\n      showModal: true,\n      newmessages: 0\n    });\n\n    this.closeChat = () => this.setState({\n      showModal: false\n    });\n\n    this.handleMessage = e => this.setState({\n      message: e.target.value\n    });\n\n    this.addMessage = (data, sender, socketIdSender) => {\n      this.setState(prevState => ({\n        messages: [...prevState.messages, {\n          sender: sender,\n          data: data\n        }]\n      }));\n\n      if (socketIdSender !== socketId) {\n        this.setState({\n          newmessages: this.state.newmessages + 1\n        });\n      }\n    };\n\n    this.handleUsername = e => this.setState({\n      username: e.target.value\n    });\n\n    this.sendMessage = () => {\n      socket.emit(\"chat-message\", this.state.message, this.state.username);\n      this.setState({\n        message: \"\",\n        sender: this.state.username\n      });\n    };\n\n    this.copyUrl = () => {\n      let text = window.location.href;\n\n      if (!navigator.clipboard) {\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        try {\n          document.execCommand(\"copy\");\n          message.success(\"Link copied to clipboard!\");\n        } catch (err) {\n          message.error(\"Failed to copy\");\n        }\n\n        document.body.removeChild(textArea);\n        return;\n      }\n\n      navigator.clipboard.writeText(text).then(function () {\n        message.success(\"Link copied to clipboard!\");\n      }, () => {\n        message.error(\"Failed to copy\");\n      });\n    };\n\n    this.connect = () => this.setState({\n      askForUsername: false\n    }, () => this.getMedia());\n\n    this.isChrome = function () {\n      let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n      let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n      let matchChrome = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null; // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n      // return matchChrome !== null || matchFirefox !== null\n\n      return matchChrome !== null;\n    };\n\n    this.localVideoref = React.createRef();\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: true,\n      username: faker.internet.userName()\n    };\n    connections = {};\n    this.getPermissions();\n  }\n\n  render() {\n    {\n      /*if(this.isChrome() === false){\n      return (\n      <div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\n      textAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\n      <h1>Sorry, this works only with Google Chrome</h1>\n      </div>\n      )\n      }*/\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 7\n      }\n    }, this.state.askForUsername === true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"white\",\n        width: \"30%\",\n        height: \"auto\",\n        padding: \"20px\",\n        minWidth: \"400px\",\n        textAlign: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: 0,\n        fontWeight: \"bold\",\n        paddingRight: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 15\n      }\n    }, \"Set your username\"), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: e => this.handleUsername(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.connect,\n      style: {\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 15\n      }\n    }, \"Connect\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        paddingTop: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"my-video\",\n      ref: this.localVideoref,\n      autoPlay: true,\n      muted: true,\n      style: {\n        borderStyle: \"solid\",\n        borderColor: \"#bdbdbd\",\n        objectFit: \"fill\",\n        width: \"60%\",\n        height: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-down\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        color: \"whitesmoke\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"#424242\"\n      },\n      onClick: this.handleVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 15\n      }\n    }, this.state.video === true ? /*#__PURE__*/React.createElement(VideocamIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(VideocamOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"#f44336\"\n      },\n      onClick: this.handleEndCall,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CallEndIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"#424242\"\n      },\n      onClick: this.handleAudio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 15\n      }\n    }, this.state.audio === true ? /*#__PURE__*/React.createElement(MicIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 46\n      }\n    }) : /*#__PURE__*/React.createElement(MicOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 60\n      }\n    })), this.state.screenAvailable === true ? /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"#424242\"\n      },\n      onClick: this.handleScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 17\n      }\n    }, this.state.screen === true ? /*#__PURE__*/React.createElement(ScreenShareIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(StopScreenShareIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 21\n      }\n    })) : null, /*#__PURE__*/React.createElement(Badge, {\n      badgeContent: this.state.newmessages,\n      max: 999,\n      color: \"secondary\",\n      onClick: this.openChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      style: {\n        color: \"#424242\"\n      },\n      onClick: this.openChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeChat,\n      style: {\n        zIndex: \"999999\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 17\n      }\n    }, \"Mensagens\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      style: {\n        overflow: \"auto\",\n        overflowY: \"auto\",\n        height: \"400px\",\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 15\n      }\n    }, this.state.messages.length > 0 ? this.state.messages.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        wordBreak: \"break-all\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 25\n      }\n    }, item.sender), \": \", item.data))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 19\n      }\n    }, \"Nenhuma mensagem\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      className: \"div-send-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Digite algo\",\n      value: this.state.message,\n      onChange: e => this.handleMessage(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 17\n      }\n    }, \"Enviar\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: window.location.href,\n      disable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: \"#3f51b5\",\n        color: \"whitesmoke\",\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        width: \"120px\",\n        fontSize: \"10px\"\n      },\n      onClick: this.copyUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 17\n      }\n    }, \"Copiar link para convidar\")), /*#__PURE__*/React.createElement(Row, {\n      id: \"main\",\n      className: \"flex-container\",\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"my-video\",\n      ref: this.localVideoref,\n      autoPlay: true,\n      muted: true,\n      style: {\n        borderStyle: \"solid\",\n        borderColor: \"#bdbdbd\",\n        margin: \"10px\",\n        objectFit: \"fill\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default Video;","map":{"version":3,"sources":["/Volumes/BIG HD/github/Video-Meeting/src/Video.js"],"names":["React","Component","io","faker","IconButton","Badge","Input","Button","VideocamIcon","VideocamOffIcon","MicIcon","MicOffIcon","ScreenShareIcon","StopScreenShareIcon","CallEndIcon","ChatIcon","message","Row","Modal","server_url","process","env","NODE_ENV","connections","peerConnectionConfig","iceServers","urls","socket","socketId","elms","Video","constructor","props","getPermissions","navigator","mediaDevices","getUserMedia","video","then","videoAvailable","catch","audio","audioAvailable","getDisplayMedia","setState","screenAvailable","stream","window","localStream","localVideoref","current","srcObject","e","console","log","getMedia","connectToSocketServer","state","getUserMediaSuccess","tracks","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","sdp","localDescription","onended","blackSilence","args","MediaStream","black","silence","getDislayMedia","screen","getDislayMediaSuccess","gotMessageFromServer","fromId","signal","parse","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","changeCssVideos","main","widthMain","offsetWidth","minWidth","minHeight","height","String","width","videos","querySelectorAll","a","length","style","setProperty","connect","secure","on","location","href","addMessage","document","querySelector","parentNode","removeChild","getElementById","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVidep","cssMesure","createElement","css","maxHeight","margin","borderStyle","borderColor","objectFit","i","setAttribute","autoplay","playsinline","appendChild","undefined","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","canvas","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","openChat","showModal","newmessages","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevState","messages","handleUsername","username","sendMessage","copyUrl","text","clipboard","textArea","body","focus","select","execCommand","success","err","error","writeText","askForUsername","isChrome","userAgent","toLowerCase","vendor","matchChrome","test","match","createRef","internet","userName","render","background","padding","textAlign","marginTop","justifyContent","fontWeight","paddingRight","paddingTop","backgroundColor","color","zIndex","overflow","overflowY","map","item","index","wordBreak","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport faker from \"faker\";\n\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport { message } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Video.css\";\n\nconst server_url =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://video.sebastienbiollo.com\"\n    : \"http://localhost:4001\";\n\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [\n    // { 'urls': 'stun:stun.services.mozilla.com' },\n    { urls: \"stun:stun.l.google.com:19302\" },\n  ],\n};\nvar socket = null;\nvar socketId = null;\nvar elms = 0;\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideoref = React.createRef();\n\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: true,\n      username: faker.internet.userName(),\n    };\n    connections = {};\n\n    this.getPermissions();\n  }\n\n  getPermissions = async () => {\n    try {\n      await navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(() => (this.videoAvailable = true))\n        .catch(() => (this.videoAvailable = false));\n\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() => (this.audioAvailable = true))\n        .catch(() => (this.audioAvailable = false));\n\n      if (navigator.mediaDevices.getDisplayMedia) {\n        this.setState({ screenAvailable: true });\n      } else {\n        this.setState({ screenAvailable: false });\n      }\n\n      if (this.videoAvailable || this.audioAvailable) {\n        navigator.mediaDevices\n          .getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable,\n          })\n          .then((stream) => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          })\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  getMedia = () => {\n    this.setState(\n      {\n        video: this.videoAvailable,\n        audio: this.audioAvailable,\n      },\n      () => {\n        this.getUserMedia();\n        this.connectToSocketServer();\n      }\n    );\n  };\n\n  getUserMedia = () => {\n    if (\n      (this.state.video && this.videoAvailable) ||\n      (this.state.audio && this.audioAvailable)\n    ) {\n      navigator.mediaDevices\n        .getUserMedia({ video: this.state.video, audio: this.state.audio })\n        .then(this.getUserMediaSuccess)\n        .then((stream) => {})\n        .catch((e) => console.log(e));\n    } else {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      } catch (e) {}\n    }\n  };\n\n  getUserMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              video: false,\n              audio: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              for (let id in connections) {\n                connections[id].addStream(window.localStream);\n\n                connections[id].createOffer().then((description) => {\n                  connections[id]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        id,\n                        JSON.stringify({\n                          sdp: connections[id].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                });\n              }\n            }\n          );\n        })\n    );\n  };\n\n  getDislayMedia = () => {\n    if (this.state.screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true, audio: true })\n          .then(this.getDislayMediaSuccess)\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  getDislayMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              screen: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              this.getUserMedia();\n            }\n          );\n        })\n    );\n  };\n\n  gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n\n    if (fromId !== socketId) {\n      if (signal.sdp) {\n        connections[fromId]\n          .setRemoteDescription(new RTCSessionDescription(signal.sdp))\n          .then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId]\n                .createAnswer()\n                .then((description) => {\n                  connections[fromId]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        fromId,\n                        JSON.stringify({\n                          sdp: connections[fromId].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                })\n                .catch((e) => console.log(e));\n            }\n          })\n          .catch((e) => console.log(e));\n      }\n\n      if (signal.ice) {\n        connections[fromId]\n          .addIceCandidate(new RTCIceCandidate(signal.ice))\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  changeCssVideos = (main) => {\n    let widthMain = main.offsetWidth;\n    let minWidth = \"30%\";\n    if ((widthMain * 30) / 100 < 300) {\n      minWidth = \"300px\";\n    }\n    let minHeight = \"40%\";\n\n    let height = String(100 / elms) + \"%\";\n    let width = \"\";\n    if (elms === 0 || elms === 1) {\n      width = \"100%\";\n      height = \"100%\";\n    } else if (elms === 2) {\n      width = \"45%\";\n      height = \"100%\";\n    } else if (elms === 3 || elms === 4) {\n      width = \"35%\";\n      height = \"50%\";\n    } else {\n      width = String(100 / elms) + \"%\";\n    }\n\n    let videos = main.querySelectorAll(\"video\");\n    for (let a = 0; a < videos.length; ++a) {\n      videos[a].style.minWidth = minWidth;\n      videos[a].style.minHeight = minHeight;\n      videos[a].style.setProperty(\"width\", width);\n      videos[a].style.setProperty(\"height\", height);\n    }\n\n    return { minWidth, minHeight, width, height };\n  };\n\n  connectToSocketServer = () => {\n    socket = io.connect(server_url, { secure: true });\n\n    socket.on(\"signal\", this.gotMessageFromServer);\n\n    socket.on(\"connect\", () => {\n      socket.emit(\"join-call\", window.location.href);\n      socketId = socket.id;\n\n      socket.on(\"chat-message\", this.addMessage);\n\n      socket.on(\"user-left\", (id) => {\n        let video = document.querySelector(`[data-socket=\"${id}\"]`);\n        if (video !== null) {\n          elms--;\n          video.parentNode.removeChild(video);\n\n          let main = document.getElementById(\"main\");\n          this.changeCssVideos(main);\n        }\n      });\n\n      socket.on(\"user-joined\", (id, clients) => {\n        clients.forEach((socketListId) => {\n          connections[socketListId] = new RTCPeerConnection(\n            peerConnectionConfig\n          );\n          // Wait for their ice candidate\n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socket.emit(\n                \"signal\",\n                socketListId,\n                JSON.stringify({ ice: event.candidate })\n              );\n            }\n          };\n\n          // Wait for their video stream\n          connections[socketListId].onaddstream = (event) => {\n            // TODO mute button, full screen button\n            var searchVidep = document.querySelector(\n              `[data-socket=\"${socketListId}\"]`\n            );\n            if (searchVidep !== null) {\n              // if i don't do this check it make an empyt square\n              searchVidep.srcObject = event.stream;\n            } else {\n              elms = clients.length;\n              let main = document.getElementById(\"main\");\n              let cssMesure = this.changeCssVideos(main);\n\n              let video = document.createElement(\"video\");\n\n              let css = {\n                minWidth: cssMesure.minWidth,\n                minHeight: cssMesure.minHeight,\n                maxHeight: \"100%\",\n                margin: \"10px\",\n                borderStyle: \"solid\",\n                borderColor: \"#bdbdbd\",\n                objectFit: \"fill\",\n              };\n              for (let i in css) video.style[i] = css[i];\n\n              video.style.setProperty(\"width\", cssMesure.width);\n              video.style.setProperty(\"height\", cssMesure.height);\n              video.setAttribute(\"data-socket\", socketListId);\n              video.srcObject = event.stream;\n              video.autoplay = true;\n              video.playsinline = true;\n\n              main.appendChild(video);\n            }\n          };\n\n          // Add the local video stream\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) =>\n              new MediaStream([this.black(...args), this.silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n\n        if (id === socketId) {\n          for (let id2 in connections) {\n            if (id2 === socketId) continue;\n\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n\n            connections[id2].createOffer().then((description) => {\n              connections[id2]\n                .setLocalDescription(description)\n                .then(() => {\n                  socket.emit(\n                    \"signal\",\n                    id2,\n                    JSON.stringify({ sdp: connections[id2].localDescription })\n                  );\n                })\n                .catch((e) => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n\n  silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false });\n  };\n  black = ({ width = 640, height = 480 } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height,\n    });\n    canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false });\n  };\n\n  handleVideo = () =>\n    this.setState({ video: !this.state.video }, () => this.getUserMedia());\n  handleAudio = () =>\n    this.setState({ audio: !this.state.audio }, () => this.getUserMedia());\n  handleScreen = () =>\n    this.setState({ screen: !this.state.screen }, () => this.getDislayMedia());\n\n  handleEndCall = () => {\n    try {\n      let tracks = this.localVideoref.current.srcObject.getTracks();\n      tracks.forEach((track) => track.stop());\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n\n  openChat = () => this.setState({ showModal: true, newmessages: 0 });\n  closeChat = () => this.setState({ showModal: false });\n  handleMessage = (e) => this.setState({ message: e.target.value });\n\n  addMessage = (data, sender, socketIdSender) => {\n    this.setState((prevState) => ({\n      messages: [...prevState.messages, { sender: sender, data: data }],\n    }));\n    if (socketIdSender !== socketId) {\n      this.setState({ newmessages: this.state.newmessages + 1 });\n    }\n  };\n\n  handleUsername = (e) => this.setState({ username: e.target.value });\n\n  sendMessage = () => {\n    socket.emit(\"chat-message\", this.state.message, this.state.username);\n    this.setState({ message: \"\", sender: this.state.username });\n  };\n\n  copyUrl = () => {\n    let text = window.location.href;\n    if (!navigator.clipboard) {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand(\"copy\");\n        message.success(\"Link copied to clipboard!\");\n      } catch (err) {\n        message.error(\"Failed to copy\");\n      }\n      document.body.removeChild(textArea);\n      return;\n    }\n    navigator.clipboard.writeText(text).then(\n      function () {\n        message.success(\"Link copied to clipboard!\");\n      },\n      () => {\n        message.error(\"Failed to copy\");\n      }\n    );\n  };\n\n  connect = () =>\n    this.setState({ askForUsername: false }, () => this.getMedia());\n\n  isChrome = function () {\n    let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n    let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n    let matchChrome = /google inc/.test(vendor)\n      ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/)\n      : null;\n    // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n    // return matchChrome !== null || matchFirefox !== null\n    return matchChrome !== null;\n  };\n\n  render() {\n    {\n      /*if(this.isChrome() === false){\n\t\t\treturn (\n\t\t\t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\n\t\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\n\t\t\t\t\t<h1>Sorry, this works only with Google Chrome</h1>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}*/\n    }\n    return (\n      <div>\n        {this.state.askForUsername === true ? (\n          <div>\n            <div\n              style={{\n                background: \"white\",\n                width: \"30%\",\n                height: \"auto\",\n                padding: \"20px\",\n                minWidth: \"400px\",\n                textAlign: \"center\",\n                margin: \"auto\",\n                marginTop: \"50px\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p\n                style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}\n              >\n                Set your username\n              </p>\n              <Input\n                placeholder=\"Username\"\n                value={this.state.username}\n                onChange={(e) => this.handleUsername(e)}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.connect}\n                style={{ margin: \"20px\" }}\n              >\n                Connect\n              </Button>\n            </div>\n\n            <div\n              style={{\n                justifyContent: \"center\",\n                textAlign: \"center\",\n                paddingTop: \"40px\",\n              }}\n            >\n              <video\n                id=\"my-video\"\n                ref={this.localVideoref}\n                autoPlay\n                muted\n                style={{\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\",\n                  width: \"60%\",\n                  height: \"30%\",\n                }}\n              ></video>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div\n              className=\"btn-down\"\n              style={{\n                backgroundColor: \"whitesmoke\",\n                color: \"whitesmoke\",\n                textAlign: \"center\",\n              }}\n            >\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleVideo}\n              >\n                {this.state.video === true ? (\n                  <VideocamIcon />\n                ) : (\n                  <VideocamOffIcon />\n                )}\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#f44336\" }}\n                onClick={this.handleEndCall}\n              >\n                <CallEndIcon />\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleAudio}\n              >\n                {this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\n              </IconButton>\n\n              {this.state.screenAvailable === true ? (\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.handleScreen}\n                >\n                  {this.state.screen === true ? (\n                    <ScreenShareIcon />\n                  ) : (\n                    <StopScreenShareIcon />\n                  )}\n                </IconButton>\n              ) : null}\n\n              <Badge\n                badgeContent={this.state.newmessages}\n                max={999}\n                color=\"secondary\"\n                onClick={this.openChat}\n              >\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.openChat}\n                >\n                  <ChatIcon />\n                </IconButton>\n              </Badge>\n            </div>\n\n            <Modal\n              show={this.state.showModal}\n              onHide={this.closeChat}\n              style={{ zIndex: \"999999\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Mensagens</Modal.Title>\n              </Modal.Header>\n              <Modal.Body\n                style={{\n                  overflow: \"auto\",\n                  overflowY: \"auto\",\n                  height: \"400px\",\n                  textAlign: \"left\",\n                }}\n              >\n                {this.state.messages.length > 0 ? (\n                  this.state.messages.map((item, index) => (\n                    <div key={index} style={{ textAlign: \"left\" }}>\n                      <p style={{ wordBreak: \"break-all\" }}>\n                        <b>{item.sender}</b>: {item.data}\n                      </p>\n                    </div>\n                  ))\n                ) : (\n                  <p>Nenhuma mensagem</p>\n                )}\n              </Modal.Body>\n              <Modal.Footer className=\"div-send-msg\">\n                <Input\n                  placeholder=\"Digite algo\"\n                  value={this.state.message}\n                  onChange={(e) => this.handleMessage(e)}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.sendMessage}\n                >\n                  Enviar\n                </Button>\n              </Modal.Footer>\n            </Modal>\n\n            <div className=\"container\">\n              <div style={{ paddingTop: \"20px\" }}>\n                <Input value={window.location.href} disable=\"true\"></Input>\n                <Button\n                  style={{\n                    backgroundColor: \"#3f51b5\",\n                    color: \"whitesmoke\",\n                    marginLeft: \"20px\",\n                    marginTop: \"10px\",\n                    width: \"120px\",\n                    fontSize: \"10px\",\n                  }}\n                  onClick={this.copyUrl}\n                >\n                  Copiar link para convidar\n                </Button>\n              </div>\n\n              <Row\n                id=\"main\"\n                className=\"flex-container\"\n                style={{ margin: 0, padding: 0 }}\n              >\n                <video\n                  id=\"my-video\"\n                  ref={this.localVideoref}\n                  autoPlay\n                  muted\n                  style={{\n                    borderStyle: \"solid\",\n                    borderColor: \"#bdbdbd\",\n                    margin: \"10px\",\n                    objectFit: \"fill\",\n                    width: \"100%\",\n                    height: \"100%\",\n                  }}\n                ></video>\n              </Row>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}